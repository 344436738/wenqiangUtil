<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.1.xsd"
       default-lazy-init="true">

    <!-- 引入jedis配置文件 -->
    <context:property-placeholder location="classpath:redis.properties"   ignore-unresolvable="true" />
    <!-- 连接池配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大连接数 -->
        <property name="maxTotal" value="${redis.maxTotal}" />
        <!-- 最大空闲连接数 -->
        <property name="maxIdle" value="${redis.maxIdle}" />
        <!-- 每次释放连接的最大数目 -->
        <property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}" />
        <!-- 释放连接的扫描间隔（毫秒） -->
        <property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}" />
        <!-- 连接最小空闲时间 -->
        <property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}" />
        <!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
        <property name="softMinEvictableIdleTimeMillis" value="${redis.softMinEvictableIdleTimeMillis}" />
        <!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
        <!-- 在获取连接的时候检查有效性, 默认false -->
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
        <!-- 在空闲时检查有效性, 默认false -->
        <property name="testWhileIdle" value="${redis.testWhileIdle}" />
        <!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
        <property name="blockWhenExhausted" value="${redis.blockWhenExhausted}" />
    </bean>

    <!-- 配置redis客户端单机版 -->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="host" value="${redis.single.client.host}"></constructor-arg>
        <constructor-arg name="port" value="${redis.single.client.port}"></constructor-arg>
    <!--  <constructor-arg name="password" value="${redis.single.client.password}"></constructor-arg> -->
        <constructor-arg name="timeout" value="${redis.single.client.timeout}"></constructor-arg>
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"></constructor-arg>
    </bean>
    <!-- 配置redis客户端实现类 -->
    <bean id="jedisClientSingle" class="com.leimingtech.core.service.impl.jedis.JedisClientSingle"/>

    <!-- 配置redis客户端集群版 单机版和集群版的jedis只能存在一个 -->
    <!-- 配置redis客户端集群版 -->
    <!--
    <bean id="jedisCluster"
       clacom.leimingtech.base.service.impl.jedisedis.JedisClusterFactory">
       <property name="addressConfig">
           <value>classpath:redis.properties</value>
       </property>
       <property name="addressKeyPrefix" value="address" />   属性文件里 key的前缀

       <property name="timeout" value="${redis.timeout}" />
       <property name="maxRedirections" value="${redis.maxRedirections}" />
       <property name="genericObjectPoolConfig" ref="jedisPoolConfig" />
   </bean>
   <bean id="jedisClientCluster" clacom.leimingtech.base.service.impl.jedisedis.JedisClientCluster"/>
   -->
</beans>